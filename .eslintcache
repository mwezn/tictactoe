[{"/home/mrwez/Desktop/tictactoe/src/index.js":"1","/home/mrwez/Desktop/tictactoe/src/fullGame.js":"2","/home/mrwez/Desktop/tictactoe/src/five.js":"3","/home/mrwez/Desktop/tictactoe/src/reportWebVitals.js":"4","/home/mrwez/Desktop/tictactoe/src/three.js":"5"},{"size":566,"mtime":1645267665122,"results":"6","hashOfConfig":"7"},{"size":4612,"mtime":1645274520015,"results":"8","hashOfConfig":"7"},{"size":5160,"mtime":1645266062300,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1645266062300,"results":"10","hashOfConfig":"7"},{"size":3596,"mtime":1645266062300,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kppl7u",{"filePath":"14","messages":"15","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mrwez/Desktop/tictactoe/src/index.js",[],"/home/mrwez/Desktop/tictactoe/src/fullGame.js",["23","24","25","26","27","28","29"],"import React from 'react';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button className={props.value==\"X\"?\"square colourR \": \"square colourB\"} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n\nconst initialState={squares:Array(9).fill(null),human:\"\",ai:\"\"}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={...initialState}; //Prevents Mutation?!\n    \n  }\n  reset=this.reset.bind(this); //This is needed for reset\n  choosePlayer(e){\n      let player=e.target.value;\n      console.log(player)\n      e.target.value==\"X\"?this.setState({human:\"X\",ai:\"O\"}):this.setState({human:\"O\",ai:\"X\"})\n      \n      \n      let parentDiv=document.getElementById('choice')\n      console.log(parentDiv)\n      parentDiv.style.display=\"none\";\n      let btn=document.getElementById('resetbtn')\n      btn.style.display=\"\";\n  }\n  reset(){\n    this.setState(initialState);\n    let parentDiv=document.getElementById('choice')\n    parentDiv.style.display=\"\";\n    let btn=document.getElementById('resetbtn')\n    btn.style.display=\"none\";\n  }\n\n  bestMove(board){\n    let bestScore=Infinity;\n    let bestmove;\n    for (let i=0;i<9;i++){\n      if (board[i]==null){\n         board[i]=this.state.ai;\n         let score=miniMax1(this.state.human,this.state.ai,board,0,true)\n         board[i]=null;\n         console.log(score)\n         if (score<bestScore){\n          bestmove=i\n          bestScore=score;\n          \n         }\n      }\n    }\n    board[bestmove]=this.state.ai;\n}\n\n  handleClick(i){\n    const sq=this.state.squares.slice()\n    if (sq[i]==null){\n      sq[i]=this.state.human\n    \n      this.setState({\n        squares:sq,\n        //xIsNext:!this.state.xIsNext,\n      })\n    setTimeout(this.bestMove(sq),500)\n    }\n    return;\n    \n  }\n  renderSquare(i) {\n   \n    return <Square value={this.state.squares[i]} onClick={()=>this.handleClick(i)} />;\n  }\n \n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      console.log(winner);\n      status = <div className={winner==\"X\"?\"colourRWin\":winner==\"O\"?\"colourBWin\":\"colourG\"}>Winner!{winner}</div>\n    }\n    let player=this.state.human!==\"\"?<h2>You are {this.state.human}</h2>:<h2>Choose a player</h2>\n\n    return (\n      <div className=\"container\">\n        {player}\n        \n        <div className=\"status\">{status}</div>\n        <div className=\"choice\" id=\"choice\">\n            \n            <button className=\"btn btn-danger\" value=\"X\" onClick={(e)=>this.choosePlayer(e)}>X</button>\n            <button className=\"btn btn-primary\" value=\"O\" onClick={(e)=>this.choosePlayer(e)}>O</button>\n        </div>\n        <button id=\"resetbtn\" onClick={this.reset}>Reset</button>\n        <div>Click on a square:</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n      else if(!squares.includes(null)) return \"TIE\"\n    }\n    return null;\n  }\n function miniMax1(human,ai,board,depth,Max){\n  let res=calculateWinner(board);\n  if (res!==null){\n    let score=res==human?10:res==ai?-10:0;\n    return score\n  }\n  \n  if(Max){\n    let best=-Infinity\n    for (let i=0;i<9;i++){\n      if (board[i]==null){\n        board[i]=human;\n        var score=miniMax1(human,ai,board,depth+1,false);\n        board[i]=null\n        best=Math.max(best,score);\n      }\n    }\n    return best\n  }\n  else{\n    let best=Infinity\n    for (let i=0;i<9;i++){\n      if(board[i]==null){\n        board[i]=ai;\n        score=miniMax1(human,ai,board,depth+1,true);\n        board[i]=null\n        best=Math.min(best,score);\n      }\n    }\n    return best\n    \n  }\n}\n\nexport default Game;\n","/home/mrwez/Desktop/tictactoe/src/five.js",["30","31","32","33","34","35","36","37"],"/home/mrwez/Desktop/tictactoe/src/reportWebVitals.js",[],"/home/mrwez/Desktop/tictactoe/src/three.js",["38","39","40","41","42","43"],{"ruleId":"44","severity":1,"message":"45","line":6,"column":35,"nodeType":"46","messageId":"47","endLine":6,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":25,"column":21,"nodeType":"46","messageId":"47","endLine":25,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":86,"column":38,"nodeType":"46","messageId":"47","endLine":86,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":86,"column":63,"nodeType":"46","messageId":"47","endLine":86,"endColumn":65},{"ruleId":"48","severity":1,"message":"49","line":88,"column":9,"nodeType":"50","messageId":"51","endLine":88,"endColumn":15},{"ruleId":"44","severity":1,"message":"45","line":156,"column":18,"nodeType":"46","messageId":"47","endLine":156,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":156,"column":32,"nodeType":"46","messageId":"47","endLine":156,"endColumn":34},{"ruleId":"44","severity":1,"message":"45","line":7,"column":35,"nodeType":"46","messageId":"47","endLine":7,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":26,"column":19,"nodeType":"46","messageId":"47","endLine":26,"endColumn":21},{"ruleId":"48","severity":1,"message":"52","line":42,"column":66,"nodeType":"50","messageId":"51","endLine":42,"endColumn":70},{"ruleId":"44","severity":1,"message":"45","line":83,"column":38,"nodeType":"46","messageId":"47","endLine":83,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":160,"column":121,"nodeType":"46","messageId":"47","endLine":160,"endColumn":123},{"ruleId":"44","severity":1,"message":"45","line":171,"column":18,"nodeType":"46","messageId":"47","endLine":171,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":171,"column":33,"nodeType":"46","messageId":"47","endLine":171,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":193,"column":13,"nodeType":"50","messageId":"55","endLine":193,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":7,"column":35,"nodeType":"46","messageId":"47","endLine":7,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":73,"column":38,"nodeType":"46","messageId":"47","endLine":73,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":73,"column":63,"nodeType":"46","messageId":"47","endLine":73,"endColumn":65},{"ruleId":"44","severity":1,"message":"45","line":136,"column":18,"nodeType":"46","messageId":"47","endLine":136,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":136,"column":32,"nodeType":"46","messageId":"47","endLine":136,"endColumn":34},{"ruleId":"53","severity":1,"message":"54","line":157,"column":13,"nodeType":"50","messageId":"55","endLine":157,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'player' is assigned a value but never used.","Identifier","unusedVar","'memo' is assigned a value but never used.","no-redeclare","'score' is already defined.","redeclared"]